判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true
示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。

package main 

import (
        "fmt"
)

func main() {
        fmt.Printf("result:%v\n", isPalindrome(-121))
}

func isPalindrome(x int) bool {
        if x < 0 {
                return false
        }

        if x < 10 {
                return true
        }

        arr := make([]int, 0)
        for x > 0 {
                tmp := x % 10
                arr = append(arr, tmp)
                x = x / 10
        }

        for i := 0; i < len(arr) / 2; i++ {
                if arr[i] != arr[len(arr)-1-i] {
                        return false
                }
        }

        return true

}
